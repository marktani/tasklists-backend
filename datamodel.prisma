enum Role {
  SUPERADMIN,
  ADMIN,
  STAFF,
}

enum Status {
  JOINED, 
  INVITED,
  DELETED
}

enum FieldType { 
  STRING,
  INT,
  DATE,
  ASSET
}

type User {
  id: ID! @unique
  email: String! @unique
  name: String
  avatar: String
  slackHandle: String
  tasksCreated: [Task!]! @relation(name: "TaskCreatedByUser")
  tasksAssignedTo: [Task!]! @relation(name: "TaskAssignedToUser")
  role: Role! @default(value: STAFF)
  password: String
  resetToken: String @unique
  resetTokenExpiry: Float
  signupToken: String @unique
  signupTokenExpiry: Float
  status: Status! @default(value: INVITED)
}

type Task { 
  id: ID! @unique
  createdBy: User! @relation(name: "TaskCreatedByUser")
  assignedTo: User @relation(name: "TaskAssignedToUser")
  approved: Boolean! @default(value: "false")
  title: String!
  description: String!
  assets: [Asset!]!
  category: Category!
  comments: [Comment!]!
  dueDate: DateTime
  dueWhenPossible: Boolean! @default(value: "false")
  createdAt: DateTime!
  updatedAt: DateTime!
  customFields: [CustomField!]!
}

type CustomField {
  id: ID! @unique
  # duplicate fieldName / type here incase the categoryField is ever changed - we don't want to update existing Tasks
  fieldName: String!, 
  fieldType: FieldType!,
  fieldValue: String!
  categoryField: CategoryField!
}

type Category {
  id: ID! @unique
  name: String! @unique
  description: String
  categoryFields: [CategoryField!]!
}

type CategoryField {
  id: ID! @unique
  fieldName: String!
  fieldType: FieldType!
  category: Category
}

type Comment {
  id: ID! @unique
  comment: String!
  user: User
  assets: [Asset!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Asset {
  id: ID! @unique
  createdBy: User!
  assetUrl: String!
  createdAt: DateTime!
}

